<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gF07zi713v8BtovzJeV23GUAAAAASUVORK5CYII=
</value>
  </data>
</root>